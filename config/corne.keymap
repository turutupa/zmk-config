/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "./zmk-nodefree-config/helper.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define RAISE   3
#define GAMING  4

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
          }; 

          hp: hold_preferred {
              compatible = "zmk,behavior-hold-tap";
              label = "HOLD_PREFERRED";
              #binding-cells = <2>;
              tapping-term-ms = <200>;
              quick-tap-ms = <0>;
              flavor = "hold-preferred";
              bindings = <&kp>, <&kp>;
            }; 
        };

        keymap {
                compatible = "zmk,keymap";

                DEFAULT {
// -----------------------------------------------------------------------------------------
// |    TAB   |  Q  |  W  |   E   |  R  |      T     |   |     Y      |  U   |  I  |  O  |  P  |   BKSP   |
// | CTRL/ESC |  A  |  S  |   D   |  F  |      G     |   |     H      |  J   |  K  |  L  |  ;  |   ' |
// |   SHFT   |  Z  |  X  |   C   |  V  |      B     |   |     N      |  M   |  ,  |  .  |  /  |   SHFT   |
//                  | HYPER | LWR |   GUI/SPC        |   |   ALT/ENT  |  RSE | LALT|
                        bindings = <
   &kp TAB         &kp Q &kp W  &kp E     &kp R &kp T         &kp Y &kp U  &kp I     &kp O   &kp P &kp BSPC   
   &hp LCTRL ESC   &kp A &kp S  &kp D     &kp F &kp G         &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT       &kp Z &kp X  &kp C     &kp V &kp B         &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
                   &kp LC(LALT) &mo LOWER &tp LGUI SPACE      &tp LALT RET &mo RAISE &mo NAV 
                        >;
                };

                LOWER {
// -----------------------------------------------------------------------------------------
// |      |   F1  |  F2  |  F3   |  F4   |    F5      |     |   ^   |  &  |  *  |  (  |  )  |   \   |
// |      |  Prev | Next | Vol - | Vol + | Play/Pause |     |   -   |  =  |  `  |  [  |  ]  |  "|"  |
// | SHFT |  BT1  | BT2  | BT3   | BT4   |     BT5    |     |   _   |  +  |  ~  |  {  |  }  | RSHFT |
//                       |  GUI  |       | ALT/ENT    |     | HYPER/SPACE | BKSP| DEL |
                        bindings = <
   &trans     &kp F1        &kp F2       &kp F3       &kp F4               &kp F5        &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans     &kp C_PREV    &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP         &kp C_PP      &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
   &kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3         &bt BT_SEL 4  &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp RSHFT
                            &kp LC(LALT) &trans       &tp LGUI SPACE       &tp LALT RET &kp BSPC &kp DEL
                        >;
                };

                RAISE {
// -----------------------------------------------------------------------------------------
// |       | !  |  @  |  #  |  $  |    %     |            |    F6   |  F7  |  F8  |  F9  |  F10  | F11 |
// |       | 1  |  2  |  3  |  4  |    5     |            |    6    |   7  |  8   |   9  |  0    |     |
// | BTCLR |    |     |     |     |          |            |  BTCLR  |      |      |      |       |
//                    |     |     |          |            |         |      |      |
                        bindings = <
   &trans      &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT  &kp F6      &kp F7   &kp F8  &kp F9     &kp F10 &F11
   &trans      &kp N1   &kp N2 &kp N3   &kp N4   &kp N5     &kp N6      &kp N7   &kp N8  &kp N9     &kp N0  &trans
   &kp LSHFT   &trans   &trans &trans   &trans   &trans     &bt BT_CLR  &trans   &trans  &trans     &trans  &trans
                          	    &trans   &trans   &trans  &trans &trans     &trans
                        >;
                };

                NUMS {
// -----------------------------------------------------------------------------------------
// |       |    |  7  |  8  |  9  |          |            |      |      |      |      |       |     |
// |       |    |  4  |  5  |  6  |          |            | LEFT | DOWN |  UP  | RIGHT|       |     |
// |       |    |  1  |  2  |  3  |          |            |      |      |      |      |       |
//                    |  0  |     |          |            |      |      |      |
                        bindings = <
   &trans      &trans   &kp N7 &kp N8   &kp N9   &trans     &trans   &trans   &trans &trans    &trans &trans
   &trans      &trans   &kp N4 &kp N5   &kp N6   &trans     &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &bt BT_CLR  &trans   &kp N1 &kp N2   &kp N3   &trans     &trans   &trans   &trans &trans    &trans &trans
                          	    &trans   &trans   &trans  &trans &trans   &trans
                        >;
                };


                GAMING {
// -----------------------------------------------------------------------------------------
// |    TAB   |  Q  |  W  |   E   |  R  |      T     |   |     Y      |  U   |  I  |  O  |  P  |   BKSP   |
// | CTRL/ESC |  A  |  S  |   D   |  F  |      G     |   |     H      |  J   |  K  |  L  |  ;  |   ' |
// |   SHFT   |  Z  |  X  |   C   |  V  |      B     |   |     N      |  M   |  ,  |  .  |  /  |   SHFT   |
//                        |   Y   |   U |      I     |   |  ALT/ENT   | RSE  | LALT |
                        bindings = <
   &kp TAB         &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &kp BSPC   
   &kp LCTRL       &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT       &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
                   &kp Y &kp U &kp I &tp LALT RET  &mo 2 &mo RAISE &trans
                        >;
                };
        };
};
