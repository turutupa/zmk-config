/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 

        hp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |    TAB   |  Q  |  W  |   E   |  R  |      T     |   |     Y      |  U   |  I  |  O  |  P  |   BKSP   |
// | CTRL/ESC |  A  |  S  |   D   |  F  |      G     |   |     H      |  J   |  K  |  L  |  ;  |   LALT/' |
// |   SHFT   |  Z  |  X  |   C   |  V  |      B     |   |     N      |  M   |  ,  |  .  |  /  |   SHFT   |
//                    | HYPER | LWR |   GUI/SPC  |   |  ALT/ENT   | RSE  | LALT |
                        bindings = <
   &kp TAB         &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &kp BSPC   
   &hp LCTRL ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &tp LALT SQT
   &kp LSHFT       &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
                   &kp LC(LA(LGUI)) &mo 1  &tp LGUI SPACE &tp LCTRL RET &mo 2 &kp LALT 
                        >;
                };

                layer_below {
// -----------------------------------------------------------------------------------------
// |      |   F1  |  F2  |  F3   |  F4   |    F5      |     |   ^   |  &  |  *  |  (  |  )  |   \   |
// |      |  Prev | Next | Vol - | Vol + | Play/Pause |     |   -   |  =  |  `  |  [  |  ]  |  "|"  |
// | SHFT |  BT1  | BT2  | BT3   | BT4   |     BT5    |     |   _   |  +  |  ~  |  {  |  }  | RSHFT |
//                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |
                        bindings = <
   &trans     &kp F1        &kp F2       &kp F3       &kp F4       &kp F5        &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans     &kp C_PREV    &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP      &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
   &kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp RSHFT
                         &kp LGUI &trans  &tp LALT RET     &tp LC(LS(LA(LGUI))) SPACE &kp BSPC  &trans
                        >;
                };

                layer_above {
// -----------------------------------------------------------------------------------------
// |       | !  |  @  |  #  |  $  |    %     |            |  F6  |  F7  |  F8  |  F9  |  F10  |     |
// |       | 1  |  2  |  3  |  4  |    5     |            | LFT | DWN |  UP | RGT |     |     |
// | BTCLR | 6  |  7  |  8  |  9  |    0     |            |     |     |     |     |     |
//                    |     |     |    |                  |     |     |     |
                        bindings = <
   &trans      &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT  &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
   &trans      &kp N1   &kp N2 &kp N3   &kp N4   &kp N5     &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &bt BT_CLR  &kp N6   &kp N7 &kp N8   &kp N9   &kp N0     &trans   &trans   &trans &trans    &trans &trans
                          	                        &trans   &trans   &trans  &trans&trans     &trans
                        >;
                };
        };
};
